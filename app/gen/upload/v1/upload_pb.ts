// @generated by protoc-gen-es v2.5.2 with parameter "target=ts"
// @generated from file upload/v1/upload.proto (package upload.v1, syntax proto3)
/* eslint-disable */

import type {
	GenFile,
	GenMessage,
	GenService,
} from "@bufbuild/protobuf/codegenv2";
import {
	fileDesc,
	messageDesc,
	serviceDesc,
} from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file upload/v1/upload.proto.
 */
export const file_upload_v1_upload: GenFile =
	/*@__PURE__*/
	fileDesc(
		"ChZ1cGxvYWQvdjEvdXBsb2FkLnByb3RvEgl1cGxvYWQudjEiKQoUQ2hlY2tGaWxlSGFzaFJlcXVlc3QSEQoJZmlsZV9oYXNoGAEgASgJIicKFUNoZWNrRmlsZUhhc2hSZXNwb25zZRIOCgZleGlzdHMYASABKAgiPwoXR2V0VXBsb2FkU2Vzc2lvblJlcXVlc3QSEQoJZmlsZV9oYXNoGAEgASgJEhEKCWZpbGVfc2l6ZRgCIAEoAyJxChhHZXRVcGxvYWRTZXNzaW9uUmVzcG9uc2USEgoKc2Vzc2lvbl9pZBgBIAEoCRIUCgx0b3RhbF9jaHVua3MYAiABKAUSEgoKY2h1bmtfc2l6ZRgDIAEoAxIXCg91cGxvYWRlZF9jaHVua3MYBCADKAUiUgoSVXBsb2FkQ2h1bmtSZXF1ZXN0EhIKCnNlc3Npb25faWQYASABKAkSFAoMY2h1bmtfbnVtYmVyGAIgASgFEhIKCmNodW5rX2RhdGEYAyABKAwiZAoTVXBsb2FkQ2h1bmtSZXNwb25zZRIUCgxjaHVua19udW1iZXIYASABKAUSDAoEZXRhZxgCIAEoCRIPCgdzdWNjZXNzGAMgASgIEhgKEHVwbG9hZF9jb21wbGV0ZWQYBCABKAgiKwoVQ29tcGxldGVVcGxvYWRSZXF1ZXN0EhIKCnNlc3Npb25faWQYASABKAkiPwoWQ29tcGxldGVVcGxvYWRSZXNwb25zZRIUCgxzdG9yYWdlX2hhc2gYASABKAkSDwoHc3VjY2VzcxgCIAEoCDLlAgoNVXBsb2FkU2VydmljZRJSCg1DaGVja0ZpbGVIYXNoEh8udXBsb2FkLnYxLkNoZWNrRmlsZUhhc2hSZXF1ZXN0GiAudXBsb2FkLnYxLkNoZWNrRmlsZUhhc2hSZXNwb25zZRJbChBHZXRVcGxvYWRTZXNzaW9uEiIudXBsb2FkLnYxLkdldFVwbG9hZFNlc3Npb25SZXF1ZXN0GiMudXBsb2FkLnYxLkdldFVwbG9hZFNlc3Npb25SZXNwb25zZRJMCgtVcGxvYWRDaHVuaxIdLnVwbG9hZC52MS5VcGxvYWRDaHVua1JlcXVlc3QaHi51cGxvYWQudjEuVXBsb2FkQ2h1bmtSZXNwb25zZRJVCg5Db21wbGV0ZVVwbG9hZBIgLnVwbG9hZC52MS5Db21wbGV0ZVVwbG9hZFJlcXVlc3QaIS51cGxvYWQudjEuQ29tcGxldGVVcGxvYWRSZXNwb25zZUIjWiFieXRlcGFja2VyL2dlbi91cGxvYWQvdjE7dXBsb2FkdjFiBnByb3RvMw",
	);

/**
 * 检查文件hash请求
 *
 * @generated from message upload.v1.CheckFileHashRequest
 */
export type CheckFileHashRequest = Message<"upload.v1.CheckFileHashRequest"> & {
	/**
	 * @generated from field: string file_hash = 1;
	 */
	fileHash: string;
};

/**
 * Describes the message upload.v1.CheckFileHashRequest.
 * Use `create(CheckFileHashRequestSchema)` to create a new message.
 */
export const CheckFileHashRequestSchema: GenMessage<CheckFileHashRequest> =
	/*@__PURE__*/
	messageDesc(file_upload_v1_upload, 0);

/**
 * 检查文件hash响应
 *
 * @generated from message upload.v1.CheckFileHashResponse
 */
export type CheckFileHashResponse =
	Message<"upload.v1.CheckFileHashResponse"> & {
		/**
		 * @generated from field: bool exists = 1;
		 */
		exists: boolean;
	};

/**
 * Describes the message upload.v1.CheckFileHashResponse.
 * Use `create(CheckFileHashResponseSchema)` to create a new message.
 */
export const CheckFileHashResponseSchema: GenMessage<CheckFileHashResponse> =
	/*@__PURE__*/
	messageDesc(file_upload_v1_upload, 1);

/**
 * 获取上传会话请求
 *
 * @generated from message upload.v1.GetUploadSessionRequest
 */
export type GetUploadSessionRequest =
	Message<"upload.v1.GetUploadSessionRequest"> & {
		/**
		 * @generated from field: string file_hash = 1;
		 */
		fileHash: string;

		/**
		 * @generated from field: int64 file_size = 2;
		 */
		fileSize: bigint;
	};

/**
 * Describes the message upload.v1.GetUploadSessionRequest.
 * Use `create(GetUploadSessionRequestSchema)` to create a new message.
 */
export const GetUploadSessionRequestSchema: GenMessage<GetUploadSessionRequest> =
	/*@__PURE__*/
	messageDesc(file_upload_v1_upload, 2);

/**
 * 获取上传会话响应
 *
 * @generated from message upload.v1.GetUploadSessionResponse
 */
export type GetUploadSessionResponse =
	Message<"upload.v1.GetUploadSessionResponse"> & {
		/**
		 * @generated from field: string session_id = 1;
		 */
		sessionId: string;

		/**
		 * @generated from field: int32 total_chunks = 2;
		 */
		totalChunks: number;

		/**
		 * @generated from field: int64 chunk_size = 3;
		 */
		chunkSize: bigint;

		/**
		 * 断点续传：已上传的分块
		 *
		 * @generated from field: repeated int32 uploaded_chunks = 4;
		 */
		uploadedChunks: number[];
	};

/**
 * Describes the message upload.v1.GetUploadSessionResponse.
 * Use `create(GetUploadSessionResponseSchema)` to create a new message.
 */
export const GetUploadSessionResponseSchema: GenMessage<GetUploadSessionResponse> =
	/*@__PURE__*/
	messageDesc(file_upload_v1_upload, 3);

/**
 * 上传分块请求
 *
 * @generated from message upload.v1.UploadChunkRequest
 */
export type UploadChunkRequest = Message<"upload.v1.UploadChunkRequest"> & {
	/**
	 * @generated from field: string session_id = 1;
	 */
	sessionId: string;

	/**
	 * @generated from field: int32 chunk_number = 2;
	 */
	chunkNumber: number;

	/**
	 * @generated from field: bytes chunk_data = 3;
	 */
	chunkData: Uint8Array;
};

/**
 * Describes the message upload.v1.UploadChunkRequest.
 * Use `create(UploadChunkRequestSchema)` to create a new message.
 */
export const UploadChunkRequestSchema: GenMessage<UploadChunkRequest> =
	/*@__PURE__*/
	messageDesc(file_upload_v1_upload, 4);

/**
 * 上传分块响应
 *
 * @generated from message upload.v1.UploadChunkResponse
 */
export type UploadChunkResponse = Message<"upload.v1.UploadChunkResponse"> & {
	/**
	 * @generated from field: int32 chunk_number = 1;
	 */
	chunkNumber: number;

	/**
	 * @generated from field: string etag = 2;
	 */
	etag: string;

	/**
	 * @generated from field: bool success = 3;
	 */
	success: boolean;

	/**
	 * 所有分块是否完成
	 *
	 * @generated from field: bool upload_completed = 4;
	 */
	uploadCompleted: boolean;
};

/**
 * Describes the message upload.v1.UploadChunkResponse.
 * Use `create(UploadChunkResponseSchema)` to create a new message.
 */
export const UploadChunkResponseSchema: GenMessage<UploadChunkResponse> =
	/*@__PURE__*/
	messageDesc(file_upload_v1_upload, 5);

/**
 * 完成上传请求
 *
 * @generated from message upload.v1.CompleteUploadRequest
 */
export type CompleteUploadRequest =
	Message<"upload.v1.CompleteUploadRequest"> & {
		/**
		 * @generated from field: string session_id = 1;
		 */
		sessionId: string;
	};

/**
 * Describes the message upload.v1.CompleteUploadRequest.
 * Use `create(CompleteUploadRequestSchema)` to create a new message.
 */
export const CompleteUploadRequestSchema: GenMessage<CompleteUploadRequest> =
	/*@__PURE__*/
	messageDesc(file_upload_v1_upload, 6);

/**
 * 完成上传响应
 *
 * @generated from message upload.v1.CompleteUploadResponse
 */
export type CompleteUploadResponse =
	Message<"upload.v1.CompleteUploadResponse"> & {
		/**
		 * @generated from field: string storage_hash = 1;
		 */
		storageHash: string;

		/**
		 * @generated from field: bool success = 2;
		 */
		success: boolean;
	};

/**
 * Describes the message upload.v1.CompleteUploadResponse.
 * Use `create(CompleteUploadResponseSchema)` to create a new message.
 */
export const CompleteUploadResponseSchema: GenMessage<CompleteUploadResponse> =
	/*@__PURE__*/
	messageDesc(file_upload_v1_upload, 7);

/**
 * 上传服务
 *
 * @generated from service upload.v1.UploadService
 */
export const UploadService: GenService<{
	/**
	 * 检查文件hash是否存在
	 *
	 * @generated from rpc upload.v1.UploadService.CheckFileHash
	 */
	checkFileHash: {
		methodKind: "unary";
		input: typeof CheckFileHashRequestSchema;
		output: typeof CheckFileHashResponseSchema;
	};
	/**
	 * 获取上传会话（不存在则创建）
	 *
	 * @generated from rpc upload.v1.UploadService.GetUploadSession
	 */
	getUploadSession: {
		methodKind: "unary";
		input: typeof GetUploadSessionRequestSchema;
		output: typeof GetUploadSessionResponseSchema;
	};
	/**
	 * 上传分块
	 *
	 * @generated from rpc upload.v1.UploadService.UploadChunk
	 */
	uploadChunk: {
		methodKind: "unary";
		input: typeof UploadChunkRequestSchema;
		output: typeof UploadChunkResponseSchema;
	};
	/**
	 * 完成上传
	 *
	 * @generated from rpc upload.v1.UploadService.CompleteUpload
	 */
	completeUpload: {
		methodKind: "unary";
		input: typeof CompleteUploadRequestSchema;
		output: typeof CompleteUploadResponseSchema;
	};
}> = /*@__PURE__*/ serviceDesc(file_upload_v1_upload, 0);
